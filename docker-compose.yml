version: "3.7"

services:
  timescale:
    image: timescale/timescaledb:latest-pg11
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgrespassword
    volumes:
      - db-data:/var/lib/postgresql/data

  graphql-engine:
    image: hasura/graphql-engine:latest.cli-migrations
    ports:
      - "8080:8080"
    depends_on:
      - "timescale"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@timescale:5432/postgres
      HASURA_GRAPHQL_ACCESS_KEY: mylongsecretkey
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
    volumes:
      - ./docker-data/migrations:/hasura-migrations:ro
    command:
      - graphql-engine
      - serve
      - --enable-console

  back-end:
    image: node:10
    depends_on:
      - "graphql-engine"
    working_dir: /home/node/app
    environment:
      HASURA_HOST: graphql-engine
      HASURA_PORT: 8080
      HASURA_ACCESS_KEY: mylongsecretkey
      MOCK_MODE: ""
    volumes:
      - ./back-end:/home/node/app
    ports:
      - "50051:50051"
    command: bash -c "echo Starting... && npm install --silent && node index.js"

  front-end:
    image: node:10
    depends_on:
      - "graphql-engine"
    working_dir: /home/node/app
    environment:
      HASURA_HOST: graphql-engine
      HASURA_PORT: 8080
      HASURA_ACCESS_KEY: mylongsecretkey
    volumes:
      - ./front-end:/home/node/app
    command: bash -c "chmod +x entrypoint.sh && ./entrypoint.sh"
    ports:
      - "3030:3000"
    stdin_open: true

volumes:
  db-data:
